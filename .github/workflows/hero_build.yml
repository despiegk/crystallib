name: Release Hero

permissions:
  contents: write

on:
  push:

jobs:

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs: 
      upload_url: ${{ steps.create_release.outputs.upload_url }} 
    steps:
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: '0.9.7'
          draft: true
          prerelease: true
          commit: 'development'
          allowUpdates: true

  build-publish:
    needs: create-release
    strategy:
      matrix:
        include:
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref_name }} and your repository is ${{ github.repository }}."
      - name: Install dependencies
        run: |
          if [ ${{ matrix.os }} == 'ubuntu-latest' ]; then
            sudo apt install -y libgc-dev tmux git rsync curl imagemagick redis   
            sudo systemctl start redis         
          else
            brew install libgc tmux git rsync curl redis libpq
            brew services start redis
          fi          
          sleep 2
          redis-cli ping  

      - name: Setup Vlang
        uses: vlang/setup-v@v1.3
        with:
          check-latest: true

      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Checkout another repository
        uses: actions/checkout@v3
        with:
          repository: freeflowuniverse/webcomponents
          path: webcomponents

      - name: Install crystallib
        run: |
          mkdir -p ~/.vmodules/freeflowuniverse
          rm -f ~/.vmodules/freeflowuniverse/crystallib
          ln -s $(pwd)/crystallib ~/.vmodules/freeflowuniverse/crystallib
          rm -f ~/.vmodules/freeflowuniverse/webcomponents
          ln -s $(pwd)/webcomponents/webcomponents ~/.vmodules/freeflowuniverse/webcomponents    

      - name: Build hero
        run: |
          pushd cli/hero
          v -enable-globals -w hero.v
          chmod +x hero
          find $(pwd)
          popd

      - name: Extract tag name
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
                
  
      - name: Upload assets
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: cli/hero/hero
          asset_name: ${{ matrix.os }}.tar.gz
          asset_content_type: application/gzip
